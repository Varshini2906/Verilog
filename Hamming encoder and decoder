//Hamming code-encoder and decoder

module hamming_code(
input [3:0] data_in,
output [6:0] ham_out
);
wire p0,p1,p2;
assign p0 = data_in[0] ^ data_in[1] ^ data_in[3];
assign p1 = data_in[0] ^ data_in[2] ^ data_in[3];
assign p2 = data_in[1] ^ data_in[2] ^ data_in[3];
assign ham_out = {data_in, p0, p1, p2};
endmodule


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//HAMMING DECODER CODE

module hamming_dec(c,clk,s,c2,d
);
input clk;
input[6:0] c;
output reg[2:0]s;
output reg[6:0] c2;
output reg[3:0]d;
always@(posedge clk)
begin
s[2]=c[0]^c[4]^c[5]^c[6];
s[1]=c[1]^c[2]^c[5]^c[6];
s[0]=c[0]^c[2]^c[4]^c[6];
c2=c;
if(s)
c2[s-1]=~c[s-1];
end
always@(c2)
begin
d[0]=c2[2];
d[1]=c2[4];
d[2]=c2[5];
d[3]=c2[6];
end
endmodule
